# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

name: $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
variables:
  buildId: '$(Build.BuildId)'
  System.Debug: true
stages :
- stage:
  displayName: Stage Test

  jobs:  
    - job:
      displayName: Job Test
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - task: Maven@3
        condition: not(contains(variables['Build.SourceVersionMessage'], '@noci'))
        inputs:
          mavenPomFile: 'pom.xml'
          mavenOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          goals: 'package'
      - script: wget  https://dev.azure.com/victorgallet/pipelines-java/_apis/build/builds/14/logs

    - job:
      displayName: Job Test 2
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
      - bash: echo "Hello world " + $(Build.BuildId)
